# -*- coding: utf-8 -*-
"""Contoh Dasboard Kapal .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HHLIQ98KHit4gQcvzUpSbor20-LfzC7G
"""

import pandas as pd
import streamlit as st
import plotly.express as px
from datetime import datetime, timedelta

st.set_page_config(page_title="Monitoring Kapal 6 Jam", layout="wide")

import pandas as pd
import random
from datetime import datetime, timedelta

# Setup
random.seed(42)
kapal_names = ["KM Nusantara", "KM Laut Jaya", "KM Samudra", "KM Pelita", "KM Bintang",
               "KM Armada", "KM Jayabaya", "KM Pelangi", "KM Surya", "KM Baruna"]
jenis_kapal = ["Kapal Penumpang", "Kapal Curah Kering", "Kapal Curah Cair", "Kapal Kontainer"]
terminals = ["Terminal 1", "Terminal 2", "Terminal 3"]

data = []
start_date = datetime(2025, 7, 18, 0, 0)

for _ in range(100):
    nama = random.choice(kapal_names)
    jenis = random.choice(jenis_kapal)
    tanggal = start_date + timedelta(hours=random.randint(0, 120), minutes=random.randint(0, 59))
    durasi = round(random.uniform(2, 12), 1)
    terminal = random.choice(terminals)
    data.append([nama, jenis, tanggal.strftime("%Y-%m-%d %H:%M:%S"), durasi, terminal])

df_dummy = pd.DataFrame(data, columns=[
    "Nama Kapal", "Jenis Kapal", "Tanggal Kedatangan", "Durasi Sandar (jam)", "Terminal"
])
df_dummy.to_csv("dummy_kapal_data_100.csv", index=False)



import streamlit as st

import streamlit as st
import random

import streamlit as st
import random

# Fungsi Captcha
def generate_captcha():
    return ' '.join(random.sample(['A', 'B', '3', 'X', '9', 'Z'], 5))

# Inisialisasi sesi login
if 'login' not in st.session_state:
    st.session_state.login = False

if not st.session_state.login:
    st.markdown("""
        <style>
            .container {
                display: flex;
                height: 100vh;
                overflow: hidden;
                font-family: 'Segoe UI', sans-serif;
                background-color: #e9f4fb;
            }
            .left-panel {
                flex: 1;
                background: linear-gradient(to bottom right, #004080, #0073e6);
                color: white;
                display: flex;
                flex-direction: column;
                justify-content: center;
                padding: 50px;
                position: relative;
            }
            .left-panel h1 {
                font-size: 38px;
                font-weight: bold;
                margin-bottom: 15px;
                color: #ffffff;
            }
            .left-panel p {
                font-size: 17px;
                color: #d6ecff;
                line-height: 1.5;
                max-width: 500px;
            }
            .left-panel img.main-img {
                width: 80%;
                margin-top: 40px;
                border-radius: 15px;
                box-shadow: 0 4px 10px rgba(0,0,0,0.2);
            }
            .right-panel {
                flex: 1;
                background-color: #fefefe;
                display: flex;
                justify-content: center;
                align-items: center;
                padding: 50px;
            }
            .login-box {
                background-color: #ffffff;
                padding: 40px;
                border-radius: 12px;
                box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
                width: 100%;
                max-width: 400px;
            }
            .login-box h2 {
                margin-bottom: 20px;
                text-align: center;
                color: #003366;
            }
            .captcha-box {
                background-color: #fff7e6;
                padding: 10px 20px;
                font-weight: bold;
                font-size: 18px;
                letter-spacing: 5px;
                color: #e09000;
                border-radius: 8px;
                margin-bottom: 10px;
                display: inline-block;
            }
            .small-text {
                font-size: 13px;
                margin-top: 10px;
                text-align: center;
                color: #444;
            }
            .small-text a {
                color: #0073e6;
                text-decoration: none;
                font-weight: 500;
            }

            /* ANIMASI KAPAL */
            .ocean {
                height: 120px;
                width: 100%;
                background: #aee4f6;
                overflow: hidden;
                position: absolute;
                top: 10px;
                left: 0;
                border-radius: 12px;
            }
            .wave {
                background: url('https://i.imgur.com/axQ9wDY.png') repeat-x;
                position: absolute;
                top: 70px;
                width: 200%;
                height: 100px;
                animation: wave 10s linear infinite;
                opacity: 0.8;
            }
            @keyframes wave {
                0% { background-position-x: 0; }
                100% { background-position-x: -1600px; }
            }
            .ship {
                position: absolute;
                top: 20px;
                left: 0;
                width: 300px;
                animation: sail 5s linear infinite;
            }
            @keyframes sail {
                0% { left: -150px; }
                100% { left: 100%; }
            }
        </style>
    """, unsafe_allow_html=True)

    # Struktur halaman
    st.markdown('<div class="container">', unsafe_allow_html=True)

    st.markdown(f"""
        <div class="left-panel">
            <div class="ocean">
                <div class="wave"></div>
                <img src="https://imgur.com/OyBhpR9.png" class="ship" />
            </div>
            <h1>SmartShip Evaluation System</h1>
            <p>
                Pantau performa armada Anda secara real-time. Evaluasi efisiensi kapal, konsumsi bahan bakar,
                dan kepatuhan operasional dari satu dashboard terintegrasi.
            </p>
            <img src="https://imgur.com/OyBhpR9.png" class="main-img" alt="kapal"/>
        </div>
    """, unsafe_allow_html=True)

    st.markdown('<div class="right-panel"><div class="login-box">', unsafe_allow_html=True)
    st.markdown('<h2>Login to Dashboard</h2>', unsafe_allow_html=True)

    username = st.text_input("Username")
    password = st.text_input("Password", type="password")

    captcha = generate_captcha()
    st.markdown(f'<div class="captcha-box">{captcha}</div>', unsafe_allow_html=True)
    user_captcha = st.text_input("Captcha")

    if st.button("Sign In"):
        if username == "admin" and password == "123" and user_captcha.replace(" ", "") == captcha.replace(" ", ""):
            st.session_state.login = True
            st.rerun()
        else:
            st.error("Login gagal: Username / Password / Captcha salah.")

    st.markdown('<div class="small-text">Don’t have an account? <a href="#">Sign Up Here</a></div>', unsafe_allow_html=True)
    st.markdown('<div class="small-text">Forgot Password? <a href="#">Click Here</a></div>', unsafe_allow_html=True)

    st.markdown('</div></div></div>', unsafe_allow_html=True)  # Penutup container
    st.stop()

# Jika berhasil login
st.success("✅ Berhasil login! Selamat datang di SmartShip Dashboard.")
st.markdown("📊 Di sini akan muncul dashboard utama...")

# Contoh konten dashboard
st.header("Dashboard Utama")
st.write("Analisis Performa Kapal Anda.")

col1, col2, col3 = st.columns(3)
col1.metric("Total Armada", "12 Kapal", "2")
col2.metric("Efisiensi Bahan Bakar", "85%", "-1.2%")
col3.metric("Kepatuhan Rute", "98%", "0.5%")
# ------------------ DASHBOARD ------------------
st.sidebar.success("Login berhasil!")
st.sidebar.title("Navigasi")
page = st.sidebar.radio("Pilih Halaman:", ["Beranda", "Monitoring", "Statistik", "Tentang"])

if page == "Beranda":
    st.image("https://yourimageurl.com/banner.png", use_column_width=True)
    st.markdown("### 👋 Selamat Datang di Dashboard Monitoring Barang Kapal")
    col1, col2, col3 = st.columns(3)
    col1.metric("Kapal Hari Ini", "17")
    col2.metric("Terminal Aktif", "Terminal 2")
    col3.metric("Update Terakhir", "14:47 WIB")
    
# ---------- BACA DATA ----------
@st.cache_data
def load_data():
    df = pd.read_csv('dummy_kapal_data_100.csv', parse_dates=["Tanggal Kedatangan"])
    return df

df = load_data()

# ---------- FILTER 6 JAM TERAKHIR ----------
now = datetime.now()
six_hours_ago = now - timedelta(hours=6)
df_filtered = df[(df["Tanggal Kedatangan"] >= six_hours_ago) & (df["Tanggal Kedatangan"] <= now)]

st.title("🚢 Dashboard Monitoring Kapal - Update Tiap 6 Jam")
st.subheader(f"Periode: {six_hours_ago.strftime('%H:%M')} - {now.strftime('%H:%M')} WIB, {now.strftime('%d %B %Y')}")
st.markdown(f"⏱️ <b>Update berikutnya:</b> { (now + timedelta(hours=6)).strftime('%H:%M WIB') }", unsafe_allow_html=True)

# ---------- RINGKASAN ----------
col1, col2, col3, col4 = st.columns(4)

# Total Kapal Masuk
col1.metric("Total Kapal Masuk", len(df_filtered))

# Jenis Kapal Terbanyak
if not df_filtered['Jenis Kapal'].mode().empty:
    kapal_terbanyak = df_filtered['Jenis Kapal'].mode().values[0]
else:
    kapal_terbanyak = "Tidak ada data"
col2.metric("Jenis Terbanyak", kapal_terbanyak)

# Rata-rata Durasi Sandar
if not df_filtered.empty:
    rata_sandar = f"{df_filtered['Durasi Sandar (jam)'].mean():.1f} jam"
else:
    rata_sandar = "Tidak ada data"
col3.metric("Rata-rata Sandar", rata_sandar)

# Terminal Paling Aktif
if not df_filtered['Terminal'].mode().empty:
    terminal_aktif = df_filtered['Terminal'].mode().values[0]
else:
    terminal_aktif = "Tidak ada data"
col4.metric("Terminal Paling Aktif", terminal_aktif)

kapal_count = df_filtered['Jenis Kapal'].value_counts().reset_index()
kapal_count.columns = ['Jenis Kapal', 'Jumlah']

fig1 = px.bar(kapal_count,
              x='Jenis Kapal', y='Jumlah',
              labels={'Jenis Kapal': 'Jenis Kapal', 'Jumlah': 'Jumlah Kapal'},
              color='Jenis Kapal',
              text='Jumlah')
st.plotly_chart(fig1, use_container_width=True)

# ---------- GRAFIK JUMLAH PER JAM ----------
st.markdown("### 📈 Jumlah Kapal Masuk per Jam")
df_filtered['jam'] = df_filtered["Tanggal Kedatangan"].dt.strftime('%H:00')
fig2 = px.line(df_filtered.groupby('jam').size().reset_index(name='jumlah'),
               x='jam', y='jumlah', markers=True)
st.plotly_chart(fig2, use_container_width=True)

# Pastikan kolom ada
required_columns = ['timestamp', 'nama_kapal', 'jenis_kapal', 'status', 'terminal', 'durasi_sandar_jam']
missing_columns = [col for col in required_columns if col not in df_filtered.columns]

if missing_columns:
    st.error(f"❌ Kolom berikut tidak ditemukan di DataFrame: {missing_columns}")
else:
    st.markdown("### 📋 Tabel Kedatangan Kapal")
    st.dataframe(df_filtered[required_columns])

# ---------- INSIGHT OTOMATIS ----------
st.markdown("### 💡 Insight Otomatis")
with st.expander("Lihat Insight"):
    st.write(f"- Kapal dengan jenis terbanyak: **{kapal_terbanyak}**")
    st.write(f"- Terminal tersibuk: **{terminal_aktif}**")
    st.write(f"- Rata-rata durasi sandar: **{df_filtered['Durasi Sandar (jam)'].mean():.2f} jam**")
    max_kapal = df_filtered.groupby('jam').size().idxmax()
    st.write(f"- Jam paling sibuk: **{max_kapal}**")

st.markdown("⚠️ Refresh otomatis bisa diatur dengan Streamlit Cloud Scheduler atau crontab di backend.")
